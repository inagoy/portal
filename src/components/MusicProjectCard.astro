---
import { Image } from "astro:assets";
import type { Project } from "../types/config";
import { getStrings, normalizeLang, type Lang } from "../i18n";
import { Markdown } from "@astropub/md";

type Props = Project & { lang?: Lang };

const { title, description, image, year, url, socio, lang, type } = Astro.props as Props;
const t = getStrings(normalizeLang(lang));
const baseHeight = type === 'album' ? 'h-[300px]' : type === 'audiovisual' ? 'h-[200px]' : 'h-[120px]';
const imgHeight = type === 'album' ? 'sm:h-[200px]' : type === 'audiovisual' ? 'sm:h-[170px]' : 'sm:h-[140px]';
const padY = type === 'album' ? 'py-10 sm:py-6' : type === 'audiovisual' ? 'py-8 sm:py-5' : 'py-6 sm:py-4';
---

<a
  href={url}
  target="_blank"
  class={`flex flex-col sm:flex-row gap-6 opacity-100 hover:opacity-60 transition-opacity ${padY}`}
>
  <div class={`bg-gray-700 rounded-sm w-full overflow-hidden ${baseHeight} ${imgHeight}`}>
    <Image
      width={1920}
      height={1080}
      src={image}
      alt={title}
      class="w-full h-full object-cover rounded-sm"
    />
  </div>
  <div class ="relative">
    <div class="items-center gap-1 mb-2">
      <h2 class="font-medium inline-block mr-2 align-middle">{title}</h2>
      <span class="opacity-60 align-middle mr-2">{year}</span>
      {type && (
        <span class="align-middle text-[10px] uppercase tracking-wider px-2 py-0.5 rounded-sm border border-white border-opacity-30 opacity-70">
          {t.labels.types?.[type] ?? type}
        </span>
      )}
    </div>
    <div class="opacity-70 mb-1">
      <Markdown of={description} />
    </div>
    {socio && (
      <p class="opacity-50 text-sm sm:absolute inset-x-0 bottom-0">
        {t.labels.with}: {socio}
      </p>
    )}
    
  </div>
</a>
